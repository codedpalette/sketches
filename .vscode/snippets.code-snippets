{
  // Place your sketches workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
    "Sketch": {
    "scope": "typescript",
    "prefix": "sketch",
    "body": [
      "import { run, SketchFactory } from \"core/sketch\"",
      "import { Container, Graphics } from \"pixi.js\"",
      "",
      "const sketch: SketchFactory = ({ random, bbox }) => {",
      "  const container = new Container()",
      "  const graphics = container.addChild(new Graphics())",
      "  graphics",
      "    .beginFill(random.color())",
      "    .drawRect(-bbox.width / 4, -bbox.height / 4, bbox.width / 2, bbox.height / 2)",
      "  return { container }",
      "}",
      "",
      "run(sketch)",
      ""
    ]
  }
  "Timed": {
    "scope": "typescript",
    "prefix": "timed",
    "body": [
      "const t0 = performance.now()",
      "console.log('[timer] [${1:timerName}]: begin')",
      "$0",
      "console.log(`[timer] [${1:timerName}]: timer ${((performance.now() - t0) * 0.001).toFixed(3)}s`)"
    ]
  }
}
